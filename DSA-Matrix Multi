#include <stdio.h>
#include <stdlib.h>

// Function to multiply two matrices
void multiplyMatrices(int** firstMatrix, int rows1, int cols1, int** secondMatrix, int rows2, int cols2, int** resultMatrix) {
    int i, j, k;
    if (cols1 != rows2) {
        printf("Matrix multiplication not possible: incompatible dimensions.\n");
        return;
    }

    for (i = 0; i < rows1; i++) {
        for (j = 0; j < cols2; j++) { 
            resultMatrix[i][j] = 0;
            for (k = 0; k < cols1; k++) {
                resultMatrix[i][j] += firstMatrix[i][k] * secondMatrix[k][j];
            }
        }
    }
}

// Function to print a matrix
void printMatrix(int** matrix, int rows, int cols) {
    int i, j;
    for (i = 0; i < rows; i++) {
        for (j = 0; j < cols; j++) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }
}

// Function to free allocated memory for a matrix
void freeMatrix(int** matrix, int rows) {
    int i;
    for (i = 0; i < rows; i++) {
        free(matrix[i]);
    }
    free(matrix);
}

int main() {
    int i, j;
    int rows1, cols1, rows2, cols2;

    // Get dimensions for the first matrix from the user
    printf("Enter the number of rows and columns for the first matrix: ");
    scanf("%d %d", &rows1, &cols1);

    // Allocate memory for the first matrix
    int** firstMatrix = (int**)malloc(rows1 * sizeof(int*));
    for (i = 0; i < rows1; i++) {
        firstMatrix[i] = (int*)malloc(cols1 * sizeof(int));
    }

    // Get the first matrix elements from the user
    printf("Enter elements of the first matrix:\n");
    for (i = 0; i < rows1; i++) {
        for (j = 0; j < cols1; j++) {
            printf("Element [%d][%d]: ", i, j);
            scanf("%d", &firstMatrix[i][j]);
        }
    }

    // Get dimensions for the second matrix from the user
    printf("Enter the number of rows and columns for the second matrix: ");
    scanf("%d %d", &rows2, &cols2);

    // Allocate memory for the second matrix
    int** secondMatrix = (int**)malloc(rows2 * sizeof(int*));
    for (i = 0; i < rows2; i++) {
        secondMatrix[i] = (int*)malloc(cols2 * sizeof(int));
    }

    // Get the second matrix elements from the user
    printf("Enter elements of the second matrix:\n");
    for (i = 0; i < rows2; i++) {
        for (j = 0; j < cols2; j++) {
            printf("Element [%d][%d]: ", i, j);
            scanf("%d", &secondMatrix[i][j]);
        }
    }

    // Allocate memory for the result matrix
    int** resultMatrix = (int**)malloc(rows1 * sizeof(int*));
    for (i = 0; i < rows1; i++) {
        resultMatrix[i] = (int*)malloc(cols2 * sizeof(int));
    }

    // Multiply the matrices
    multiplyMatrices(firstMatrix, rows1, cols1, secondMatrix, rows2, cols2, resultMatrix);
    
    // Print the result
    printf("Result of matrix multiplication:\n");
    printMatrix(resultMatrix, rows1, cols2);

    // Free allocated memory
    freeMatrix(firstMatrix, rows1);
    freeMatrix(secondMatrix, rows2);
    freeMatrix(resultMatrix, rows1);

    return 0;
}
